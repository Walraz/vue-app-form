import {
  require_lodash
} from "./chunk-343ACIYX.js";
import {
  require_lodash as require_lodash2
} from "./chunk-RWVEZNZC.js";
import {
  Fragment,
  Transition,
  computed,
  createBaseVNode,
  createBlock,
  createElementBlock,
  createTextVNode,
  createVNode,
  defineComponent,
  getCurrentInstance,
  h,
  markRaw,
  mergeProps,
  nextTick,
  normalizeClass,
  onActivated,
  onBeforeUnmount,
  onDeactivated,
  onMounted,
  openBlock,
  provide,
  ref,
  renderList,
  renderSlot,
  resolveDynamicComponent,
  toHandlers,
  toRaw,
  unref,
  watch,
  withCtx,
  withDirectives
} from "./chunk-J6475X5X.js";
import {
  __toESM
} from "./chunk-UXIASGQL.js";

// node_modules/vue-app-form/dist/AppForm.js
var import_lodash = __toESM(require_lodash2());
var import_lodash2 = __toESM(require_lodash());
var Ke = (e) => {
  const t = ref(0), o = ref(e), n = ref({}), u = window.structuredClone(toRaw(e)), f = computed(() => Object.values(n.value)), i = (h2) => {
    o.value = { ...h2 }, t.value++;
  };
  return {
    remountForm: t,
    formData: o,
    fieldError: n,
    fieldErrorTexts: f,
    resetDefaultForm: () => i(u),
    validateForm: (h2) => {
      n.value = {};
      const d = h2.safeParse(o.value);
      return d.success ? (i(d.data), true) : (n.value = Object.entries(
        d.error.formErrors.fieldErrors
      ).reduce((p, [s, r]) => (r != null && r.length && (p[s] = r[0]), p), {}), false);
    },
    setFormData: i
  };
};
var J = {
  xs: 18,
  sm: 24,
  md: 32,
  lg: 38,
  xl: 46
};
var qe = {
  size: String
};
function Ee(e, t = J) {
  return computed(() => e.size !== void 0 ? { fontSize: e.size in t ? `${t[e.size]}px` : e.size } : null);
}
var H = (e) => markRaw(defineComponent(e));
var Ie = (e) => markRaw(e);
function xe(e, t) {
  return e !== void 0 && e() || t;
}
function z(e, t) {
  return e !== void 0 ? t.concat(e()) : t;
}
var se = "0 0 24 24";
var ie = (e) => e;
var G = (e) => `ionicons ${e}`;
var Se = {
  "mdi-": (e) => `mdi ${e}`,
  "icon-": ie,
  // fontawesome equiv
  "bt-": (e) => `bt ${e}`,
  "eva-": (e) => `eva ${e}`,
  "ion-md": G,
  "ion-ios": G,
  "ion-logo": G,
  "iconfont ": ie,
  "ti-": (e) => `themify-icon ${e}`,
  "bi-": (e) => `bootstrap-icons ${e}`
};
var we = {
  o_: "-outlined",
  r_: "-round",
  s_: "-sharp"
};
var Ce = {
  sym_o_: "-outlined",
  sym_r_: "-rounded",
  sym_s_: "-sharp"
};
var Ne = new RegExp("^(" + Object.keys(Se).join("|") + ")");
var Qe = new RegExp("^(" + Object.keys(we).join("|") + ")");
var le = new RegExp("^(" + Object.keys(Ce).join("|") + ")");
var He = /^[Mm]\s?[-+]?\.?\d/;
var Ue = /^img:/;
var We = /^svguse:/;
var Xe = /^ion-/;
var Ge = /^(fa-(sharp|solid|regular|light|brands|duotone|thin)|[lf]a[srlbdk]?) /;
var ce = H({
  name: "QIcon",
  props: {
    ...qe,
    tag: {
      type: String,
      default: "i"
    },
    name: String,
    color: String,
    left: Boolean,
    right: Boolean
  },
  setup(e, { slots: t }) {
    const { proxy: { $q: o } } = getCurrentInstance(), n = Ee(e), u = computed(
      () => "q-icon" + (e.left === true ? " on-left" : "") + (e.right === true ? " on-right" : "") + (e.color !== void 0 ? ` text-${e.color}` : "")
    ), f = computed(() => {
      let i, a = e.name;
      if (a === "none" || !a)
        return { none: true };
      if (o.iconMapFn !== null) {
        const d = o.iconMapFn(a);
        if (d !== void 0)
          if (d.icon !== void 0) {
            if (a = d.icon, a === "none" || !a)
              return { none: true };
          } else
            return {
              cls: d.cls,
              content: d.content !== void 0 ? d.content : " "
            };
      }
      if (He.test(a) === true) {
        const [d, p = se] = a.split("|");
        return {
          svg: true,
          viewBox: p,
          nodes: d.split("&&").map((s) => {
            const [r, v, k] = s.split("@@");
            return h("path", { style: v, d: r, transform: k });
          })
        };
      }
      if (Ue.test(a) === true)
        return {
          img: true,
          src: a.substring(4)
        };
      if (We.test(a) === true) {
        const [d, p = se] = a.split("|");
        return {
          svguse: true,
          src: d.substring(7),
          viewBox: p
        };
      }
      let x = " ";
      const h2 = a.match(Ne);
      if (h2 !== null)
        i = Se[h2[1]](a);
      else if (Ge.test(a) === true)
        i = a;
      else if (Xe.test(a) === true)
        i = `ionicons ion-${o.platform.is.ios === true ? "ios" : "md"}${a.substring(3)}`;
      else if (le.test(a) === true) {
        i = "notranslate material-symbols";
        const d = a.match(le);
        d !== null && (a = a.substring(6), i += Ce[d[1]]), x = a;
      } else {
        i = "notranslate material-icons";
        const d = a.match(Qe);
        d !== null && (a = a.substring(2), i += we[d[1]]), x = a;
      }
      return {
        cls: i,
        content: x
      };
    });
    return () => {
      const i = {
        class: u.value,
        style: n.value,
        "aria-hidden": "true",
        role: "presentation"
      };
      return f.value.none === true ? h(e.tag, i, xe(t.default)) : f.value.img === true ? h("span", i, z(t.default, [
        h("img", { src: f.value.src })
      ])) : f.value.svg === true ? h("span", i, z(t.default, [
        h("svg", {
          viewBox: f.value.viewBox || "0 0 24 24"
        }, f.value.nodes)
      ])) : f.value.svguse === true ? h("span", i, z(t.default, [
        h("svg", {
          viewBox: f.value.viewBox
        }, [
          h("use", { "xlink:href": f.value.src })
        ])
      ])) : (f.value.cls !== void 0 && (i.class += " " + f.value.cls), h(e.tag, i, z(t.default, [
        f.value.content
      ])));
    };
  }
});
var Ye = {
  size: {
    type: [Number, String],
    default: "1em"
  },
  color: String
};
function Je(e) {
  return {
    cSize: computed(() => e.size in J ? `${J[e.size]}px` : e.size),
    classes: computed(
      () => "q-spinner" + (e.color ? ` text-${e.color}` : "")
    )
  };
}
var Ze = H({
  name: "QSpinner",
  props: {
    ...Ye,
    thickness: {
      type: Number,
      default: 5
    }
  },
  setup(e) {
    const { cSize: t, classes: o } = Je(e);
    return () => h("svg", {
      class: o.value + " q-spinner-mat",
      width: t.value,
      height: t.value,
      viewBox: "25 25 50 50"
    }, [
      h("circle", {
        class: "path",
        cx: "50",
        cy: "50",
        r: "20",
        fill: "none",
        stroke: "currentColor",
        "stroke-width": e.thickness,
        "stroke-miterlimit": "10"
      })
    ]);
  }
});
function et(e, t) {
  const o = e.style;
  for (const n in t)
    o[n] = t[n];
}
var U = {
  hasPassive: false,
  passiveCapture: true,
  notPassiveCapture: true
};
try {
  const e = Object.defineProperty({}, "passive", {
    get() {
      Object.assign(U, {
        hasPassive: true,
        passive: { passive: true },
        notPassive: { passive: false },
        passiveCapture: { passive: true, capture: true },
        notPassiveCapture: { passive: false, capture: true }
      });
    }
  });
  window.addEventListener("qtest", null, e), window.removeEventListener("qtest", null, e);
} catch {
}
function tt(e) {
  return e.touches && e.touches[0] ? e = e.touches[0] : e.changedTouches && e.changedTouches[0] ? e = e.changedTouches[0] : e.targetTouches && e.targetTouches[0] && (e = e.targetTouches[0]), {
    top: e.clientY,
    left: e.clientX
  };
}
function $e(e) {
  e.stopPropagation();
}
function nt(e) {
  e.cancelable !== false && e.preventDefault();
}
function R(e) {
  e.cancelable !== false && e.preventDefault(), e.stopPropagation();
}
function rt(e, t, o) {
  const n = `__q_${t}_evt`;
  e[n] = e[n] !== void 0 ? e[n].concat(o) : o, o.forEach((u) => {
    u[0].addEventListener(u[1], e[u[2]], U[u[3]]);
  });
}
function ot(e, t) {
  const o = `__q_${t}_evt`;
  e[o] !== void 0 && (e[o].forEach((n) => {
    n[0].removeEventListener(n[1], e[n[2]], U[n[3]]);
  }), e[o] = void 0);
}
function at(e) {
  return e !== Object(e) || e.isComposing === true || e.qKeyEvent === true;
}
function Z(e, t) {
  return at(e) === true ? false : [].concat(t).includes(e.keyCode);
}
function ut(e, t = 250) {
  let o = false, n;
  return function() {
    return o === false && (o = true, setTimeout(() => {
      o = false;
    }, t), n = e.apply(this, arguments)), n;
  };
}
function de(e, t, o, n) {
  o.modifiers.stop === true && $e(e);
  const u = o.modifiers.color;
  let f = o.modifiers.center;
  f = f === true || n === true;
  const i = document.createElement("span"), a = document.createElement("span"), x = tt(e), { left: h2, top: d, width: p, height: s } = t.getBoundingClientRect(), r = Math.sqrt(p * p + s * s), v = r / 2, k = `${(p - r) / 2}px`, c = f ? k : `${x.left - h2 - v}px`, q = `${(s - r) / 2}px`, L = f ? q : `${x.top - d - v}px`;
  a.className = "q-ripple__inner", et(a, {
    height: `${r}px`,
    width: `${r}px`,
    transform: `translate3d(${c},${L},0) scale3d(.2,.2,1)`,
    opacity: 0
  }), i.className = `q-ripple${u ? " text-" + u : ""}`, i.setAttribute("dir", "ltr"), i.appendChild(a), t.appendChild(i);
  const b = () => {
    i.remove(), clearTimeout(S);
  };
  o.abort.push(b);
  let S = setTimeout(() => {
    a.classList.add("q-ripple__inner--enter"), a.style.transform = `translate3d(${k},${q},0) scale3d(1,1,1)`, a.style.opacity = 0.2, S = setTimeout(() => {
      a.classList.remove("q-ripple__inner--enter"), a.classList.add("q-ripple__inner--leave"), a.style.opacity = 0, S = setTimeout(() => {
        i.remove(), o.abort.splice(o.abort.indexOf(b), 1);
      }, 275);
    }, 250);
  }, 50);
}
function fe(e, { modifiers: t, value: o, arg: n }) {
  const u = Object.assign({}, e.cfg.ripple, t, o);
  e.modifiers = {
    early: u.early === true,
    stop: u.stop === true,
    center: u.center === true,
    color: u.color || n,
    keyCodes: [].concat(u.keyCodes || 13)
  };
}
var st = Ie(
  {
    name: "ripple",
    beforeMount(e, t) {
      const o = t.instance.$.appContext.config.globalProperties.$q.config || {};
      if (o.ripple === false)
        return;
      const n = {
        cfg: o,
        enabled: t.value !== false,
        modifiers: {},
        abort: [],
        start(u) {
          n.enabled === true && u.qSkipRipple !== true && u.type === (n.modifiers.early === true ? "pointerdown" : "click") && de(u, e, n, u.qKeyEvent === true);
        },
        keystart: ut((u) => {
          n.enabled === true && u.qSkipRipple !== true && Z(u, n.modifiers.keyCodes) === true && u.type === `key${n.modifiers.early === true ? "down" : "up"}` && de(u, e, n, true);
        }, 300)
      };
      fe(n, t), e.__qripple = n, rt(n, "main", [
        [e, "pointerdown", "start", "passive"],
        [e, "click", "start", "passive"],
        [e, "keydown", "keystart", "passive"],
        [e, "keyup", "keystart", "passive"]
      ]);
    },
    updated(e, t) {
      if (t.oldValue !== t.value) {
        const o = e.__qripple;
        o !== void 0 && (o.enabled = t.value !== false, o.enabled === true && Object(t.value) === t.value && fe(o, t));
      }
    },
    beforeUnmount(e) {
      const t = e.__qripple;
      t !== void 0 && (t.abort.forEach((o) => {
        o();
      }), ot(t, "main"), delete e._qripple);
    }
  }
);
var Pe = {
  left: "start",
  center: "center",
  right: "end",
  between: "between",
  around: "around",
  evenly: "evenly",
  stretch: "stretch"
};
var it = Object.keys(Pe);
var lt = {
  align: {
    type: String,
    validator: (e) => it.includes(e)
  }
};
function ct(e) {
  return computed(() => {
    const t = e.align === void 0 ? e.vertical === true ? "stretch" : "left" : e.align;
    return `${e.vertical === true ? "items" : "justify"}-${Pe[t]}`;
  });
}
function dt(e) {
  return e.appContext.config.globalProperties.$router !== void 0;
}
function ft(e) {
  return e.isUnmounted === true || e.isDeactivated === true;
}
function ve(e) {
  return e ? e.aliasOf ? e.aliasOf.path : e.path : "";
}
function me(e, t) {
  return (e.aliasOf || e) === (t.aliasOf || t);
}
function vt(e, t) {
  for (const o in t) {
    const n = t[o], u = e[o];
    if (typeof n == "string") {
      if (n !== u)
        return false;
    } else if (Array.isArray(u) === false || u.length !== n.length || n.some((f, i) => f !== u[i]))
      return false;
  }
  return true;
}
function ge(e, t) {
  return Array.isArray(t) === true ? e.length === t.length && e.every((o, n) => o === t[n]) : e.length === 1 && e[0] === t;
}
function mt(e, t) {
  return Array.isArray(e) === true ? ge(e, t) : Array.isArray(t) === true ? ge(t, e) : e === t;
}
function gt(e, t) {
  if (Object.keys(e).length !== Object.keys(t).length)
    return false;
  for (const o in e)
    if (mt(e[o], t[o]) === false)
      return false;
  return true;
}
var ht = {
  // router-link
  to: [String, Object],
  replace: Boolean,
  exact: Boolean,
  activeClass: {
    type: String,
    default: "q-router-link--active"
  },
  exactActiveClass: {
    type: String,
    default: "q-router-link--exact-active"
  },
  // regular <a> link
  href: String,
  target: String,
  // state
  disable: Boolean
};
function pt({ fallbackTag: e, useDisableForRouterLinkProps: t = true } = {}) {
  const o = getCurrentInstance(), { props: n, proxy: u, emit: f } = o, i = dt(o), a = computed(() => n.disable !== true && n.href !== void 0), x = t === true ? computed(
    () => i === true && n.disable !== true && a.value !== true && n.to !== void 0 && n.to !== null && n.to !== ""
  ) : computed(
    () => i === true && a.value !== true && n.to !== void 0 && n.to !== null && n.to !== ""
  ), h2 = computed(() => x.value === true ? L(n.to) : null), d = computed(() => h2.value !== null), p = computed(() => a.value === true || d.value === true), s = computed(() => n.type === "a" || p.value === true ? "a" : n.tag || e || "div"), r = computed(() => a.value === true ? {
    href: n.href,
    target: n.target
  } : d.value === true ? {
    href: h2.value.href,
    target: n.target
  } : {}), v = computed(() => {
    if (d.value === false)
      return -1;
    const { matched: g } = h2.value, { length: w } = g, C = g[w - 1];
    if (C === void 0)
      return -1;
    const _ = u.$route.matched;
    if (_.length === 0)
      return -1;
    const B = _.findIndex(
      me.bind(null, C)
    );
    if (B > -1)
      return B;
    const D = ve(g[w - 2]);
    return (
      // we are dealing with nested routes
      w > 1 && ve(C) === D && _[_.length - 1].path !== D ? _.findIndex(
        me.bind(null, g[w - 2])
      ) : B
    );
  }), k = computed(
    () => d.value === true && v.value !== -1 && vt(u.$route.params, h2.value.params)
  ), c = computed(
    () => k.value === true && v.value === u.$route.matched.length - 1 && gt(u.$route.params, h2.value.params)
  ), q = computed(() => d.value === true ? c.value === true ? ` ${n.exactActiveClass} ${n.activeClass}` : n.exact === true ? "" : k.value === true ? ` ${n.activeClass}` : "" : "");
  function L(g) {
    try {
      return u.$router.resolve(g);
    } catch {
    }
    return null;
  }
  function b(g, { returnRouterError: w, to: C = n.to, replace: _ = n.replace } = {}) {
    if (n.disable === true)
      return g.preventDefault(), Promise.resolve(false);
    if (
      // don't redirect with control keys;
      // should match RouterLink from Vue Router
      g.metaKey || g.altKey || g.ctrlKey || g.shiftKey || g.button !== void 0 && g.button !== 0 || n.target === "_blank"
    )
      return Promise.resolve(false);
    g.preventDefault();
    const B = u.$router[_ === true ? "replace" : "push"](C);
    return w === true ? B : B.then(() => {
    }).catch(() => {
    });
  }
  function S(g) {
    if (d.value === true) {
      const w = (C) => b(g, C);
      f("click", g, w), g.defaultPrevented !== true && w();
    } else
      f("click", g);
  }
  return {
    hasRouterLink: d,
    hasHrefLink: a,
    hasLink: p,
    linkTag: s,
    resolvedLink: h2,
    linkIsActive: k,
    linkIsExactActive: c,
    linkClass: q,
    linkAttrs: r,
    getLink: L,
    navigateToRouterLink: b,
    navigateOnClick: S
  };
}
var he = {
  none: 0,
  xs: 4,
  sm: 8,
  md: 16,
  lg: 24,
  xl: 32
};
var bt = {
  xs: 8,
  sm: 10,
  md: 14,
  lg: 20,
  xl: 24
};
var yt = ["button", "submit", "reset"];
var kt = /[^\s]\/[^\s]/;
var qt = ["flat", "outline", "push", "unelevated"];
var Et = (e, t) => e.flat === true ? "flat" : e.outline === true ? "outline" : e.push === true ? "push" : e.unelevated === true ? "unelevated" : t;
var xt = {
  ...qe,
  ...ht,
  type: {
    type: String,
    default: "button"
  },
  label: [Number, String],
  icon: String,
  iconRight: String,
  ...qt.reduce(
    (e, t) => (e[t] = Boolean) && e,
    {}
  ),
  square: Boolean,
  round: Boolean,
  rounded: Boolean,
  glossy: Boolean,
  size: String,
  fab: Boolean,
  fabMini: Boolean,
  padding: String,
  color: String,
  textColor: String,
  noCaps: Boolean,
  noWrap: Boolean,
  dense: Boolean,
  tabindex: [Number, String],
  ripple: {
    type: [Boolean, Object],
    default: true
  },
  align: {
    ...lt.align,
    default: "center"
  },
  stack: Boolean,
  stretch: Boolean,
  loading: {
    type: Boolean,
    default: null
  },
  disable: Boolean
};
function St(e) {
  const t = Ee(e, bt), o = ct(e), { hasRouterLink: n, hasLink: u, linkTag: f, linkAttrs: i, navigateOnClick: a } = pt({
    fallbackTag: "button"
  }), x = computed(() => {
    const c = e.fab === false && e.fabMini === false ? t.value : {};
    return e.padding !== void 0 ? Object.assign({}, c, {
      padding: e.padding.split(/\s+/).map((q) => q in he ? he[q] + "px" : q).join(" "),
      minWidth: "0",
      minHeight: "0"
    }) : c;
  }), h2 = computed(
    () => e.rounded === true || e.fab === true || e.fabMini === true
  ), d = computed(
    () => e.disable !== true && e.loading !== true
  ), p = computed(() => d.value === true ? e.tabindex || 0 : -1), s = computed(() => Et(e, "standard")), r = computed(() => {
    const c = { tabindex: p.value };
    return u.value === true ? Object.assign(c, i.value) : yt.includes(e.type) === true && (c.type = e.type), f.value === "a" ? (e.disable === true ? c["aria-disabled"] = "true" : c.href === void 0 && (c.role = "button"), n.value !== true && kt.test(e.type) === true && (c.type = e.type)) : e.disable === true && (c.disabled = "", c["aria-disabled"] = "true"), e.loading === true && e.percentage !== void 0 && Object.assign(c, {
      role: "progressbar",
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      "aria-valuenow": e.percentage
    }), c;
  }), v = computed(() => {
    let c;
    e.color !== void 0 ? e.flat === true || e.outline === true ? c = `text-${e.textColor || e.color}` : c = `bg-${e.color} text-${e.textColor || "white"}` : e.textColor && (c = `text-${e.textColor}`);
    const q = e.round === true ? "round" : `rectangle${h2.value === true ? " q-btn--rounded" : e.square === true ? " q-btn--square" : ""}`;
    return `q-btn--${s.value} q-btn--${q}` + (c !== void 0 ? " " + c : "") + (d.value === true ? " q-btn--actionable q-focusable q-hoverable" : e.disable === true ? " disabled" : "") + (e.fab === true ? " q-btn--fab" : e.fabMini === true ? " q-btn--fab-mini" : "") + (e.noCaps === true ? " q-btn--no-uppercase" : "") + (e.dense === true ? " q-btn--dense" : "") + (e.stretch === true ? " no-border-radius self-stretch" : "") + (e.glossy === true ? " glossy" : "") + (e.square ? " q-btn--square" : "");
  }), k = computed(
    () => o.value + (e.stack === true ? " column" : " row") + (e.noWrap === true ? " no-wrap text-no-wrap" : "") + (e.loading === true ? " q-btn__content--hidden" : "")
  );
  return {
    classes: v,
    style: x,
    innerClasses: k,
    attributes: r,
    hasLink: u,
    linkTag: f,
    navigateOnClick: a,
    isActionable: d
  };
}
var { passiveCapture: $ } = U;
var A = null;
var j = null;
var F = null;
var pe = H({
  name: "QBtn",
  props: {
    ...xt,
    percentage: Number,
    darkPercentage: Boolean,
    onTouchstart: [Function, Array]
  },
  emits: ["click", "keydown", "mousedown", "keyup"],
  setup(e, { slots: t, emit: o }) {
    const { proxy: n } = getCurrentInstance(), {
      classes: u,
      style: f,
      innerClasses: i,
      attributes: a,
      hasLink: x,
      linkTag: h2,
      navigateOnClick: d,
      isActionable: p
    } = St(e), s = ref(null), r = ref(null);
    let v = null, k, c = null;
    const q = computed(
      () => e.label !== void 0 && e.label !== null && e.label !== ""
    ), L = computed(() => e.disable === true || e.ripple === false ? false : {
      keyCodes: x.value === true ? [13, 32] : [13],
      ...e.ripple === true ? {} : e.ripple
    }), b = computed(() => ({ center: e.round })), S = computed(() => {
      const l = Math.max(0, Math.min(100, e.percentage));
      return l > 0 ? { transition: "transform 0.6s", transform: `translateX(${l - 100}%)` } : {};
    }), g = computed(() => {
      if (e.loading === true)
        return {
          onMousedown: V,
          onTouchstart: V,
          onClick: V,
          onKeydown: V,
          onKeyup: V
        };
      if (p.value === true) {
        const l = {
          onClick: C,
          onKeydown: _,
          onMousedown: D
        };
        if (n.$q.platform.has.touch === true) {
          const E = e.onTouchstart !== void 0 ? "" : "Passive";
          l[`onTouchstart${E}`] = B;
        }
        return l;
      }
      return {
        // needed; especially for disabled <a> tags
        onClick: R
      };
    }), w = computed(() => ({
      ref: s,
      class: "q-btn q-btn-item non-selectable no-outline " + u.value,
      style: f.value,
      ...a.value,
      ...g.value
    }));
    function C(l) {
      if (s.value !== null) {
        if (l !== void 0) {
          if (l.defaultPrevented === true)
            return;
          const E = document.activeElement;
          if (e.type === "submit" && E !== document.body && s.value.contains(E) === false && E.contains(s.value) === false) {
            s.value.focus();
            const K = () => {
              document.removeEventListener("keydown", R, true), document.removeEventListener("keyup", K, $), s.value !== null && s.value.removeEventListener("blur", K, $);
            };
            document.addEventListener("keydown", R, true), document.addEventListener("keyup", K, $), s.value.addEventListener("blur", K, $);
          }
        }
        d(l);
      }
    }
    function _(l) {
      s.value !== null && (o("keydown", l), Z(l, [13, 32]) === true && j !== s.value && (j !== null && M(), l.defaultPrevented !== true && (s.value.focus(), j = s.value, s.value.classList.add("q-btn--active"), document.addEventListener("keyup", P, true), s.value.addEventListener("blur", P, $)), R(l)));
    }
    function B(l) {
      s.value !== null && (o("touchstart", l), l.defaultPrevented !== true && (A !== s.value && (A !== null && M(), A = s.value, v = l.target, v.addEventListener("touchcancel", P, $), v.addEventListener("touchend", P, $)), k = true, c !== null && clearTimeout(c), c = setTimeout(() => {
        c = null, k = false;
      }, 200)));
    }
    function D(l) {
      s.value !== null && (l.qSkipRipple = k === true, o("mousedown", l), l.defaultPrevented !== true && F !== s.value && (F !== null && M(), F = s.value, s.value.classList.add("q-btn--active"), document.addEventListener("mouseup", P, $)));
    }
    function P(l) {
      if (s.value !== null && !(l !== void 0 && l.type === "blur" && document.activeElement === s.value)) {
        if (l !== void 0 && l.type === "keyup") {
          if (j === s.value && Z(l, [13, 32]) === true) {
            const E = new MouseEvent("click", l);
            E.qKeyEvent = true, l.defaultPrevented === true && nt(E), l.cancelBubble === true && $e(E), s.value.dispatchEvent(E), R(l), l.qKeyEvent = true;
          }
          o("keyup", l);
        }
        M();
      }
    }
    function M(l) {
      const E = r.value;
      l !== true && (A === s.value || F === s.value) && E !== null && E !== document.activeElement && (E.setAttribute("tabindex", -1), E.focus()), A === s.value && (v !== null && (v.removeEventListener("touchcancel", P, $), v.removeEventListener("touchend", P, $)), A = v = null), F === s.value && (document.removeEventListener("mouseup", P, $), F = null), j === s.value && (document.removeEventListener("keyup", P, true), s.value !== null && s.value.removeEventListener("blur", P, $), j = null), s.value !== null && s.value.classList.remove("q-btn--active");
    }
    function V(l) {
      R(l), l.qSkipRipple = true;
    }
    return onBeforeUnmount(() => {
      M(true);
    }), Object.assign(n, { click: C }), () => {
      let l = [];
      e.icon !== void 0 && l.push(
        h(ce, {
          name: e.icon,
          left: e.stack === false && q.value === true,
          role: "img",
          "aria-hidden": "true"
        })
      ), q.value === true && l.push(
        h("span", { class: "block" }, [e.label])
      ), l = z(t.default, l), e.iconRight !== void 0 && e.round === false && l.push(
        h(ce, {
          name: e.iconRight,
          right: e.stack === false && q.value === true,
          role: "img",
          "aria-hidden": "true"
        })
      );
      const E = [
        h("span", {
          class: "q-focus-helper",
          ref: r
        })
      ];
      return e.loading === true && e.percentage !== void 0 && E.push(
        h("span", {
          class: "q-btn__progress absolute-full overflow-hidden" + (e.darkPercentage === true ? " q-btn__progress--dark" : "")
        }, [
          h("span", {
            class: "q-btn__progress-indicator fit block",
            style: S.value
          })
        ])
      ), E.push(
        h("span", {
          class: "q-btn__content text-center col items-center q-anchor--skip " + i.value
        }, l)
      ), e.loading !== null && E.push(
        h(Transition, {
          name: "q-transition--fade"
        }, () => e.loading === true ? [
          h("span", {
            key: "loading",
            class: "absolute-full flex flex-center"
          }, t.loading !== void 0 ? t.loading() : [h(Ze)])
        ] : null)
      ), withDirectives(
        h(
          h2.value,
          w.value,
          E
        ),
        [[
          st,
          L.value,
          void 0,
          b.value
        ]]
      );
    };
  }
});
var wt = [];
function Ct(e) {
  wt.length === 0 && e();
}
var $t = "_q_fo_";
var Pt = H({
  name: "QForm",
  props: {
    autofocus: Boolean,
    noErrorFocus: Boolean,
    noResetFocus: Boolean,
    greedy: Boolean,
    onSubmit: Function
  },
  emits: ["reset", "validationSuccess", "validationError"],
  setup(e, { slots: t, emit: o }) {
    const n = getCurrentInstance(), u = ref(null);
    let f = 0;
    const i = [];
    function a(r) {
      const v = typeof r == "boolean" ? r : e.noErrorFocus !== true, k = ++f, c = (b, S) => {
        o("validation" + (b === true ? "Success" : "Error"), S);
      }, q = (b) => {
        const S = b.validate();
        return typeof S.then == "function" ? S.then(
          (g) => ({ valid: g, comp: b }),
          (g) => ({ valid: false, comp: b, err: g })
        ) : Promise.resolve({ valid: S, comp: b });
      };
      return (e.greedy === true ? Promise.all(i.map(q)).then((b) => b.filter((S) => S.valid !== true)) : i.reduce(
        (b, S) => b.then(() => q(S).then((g) => {
          if (g.valid === false)
            return Promise.reject(g);
        })),
        Promise.resolve()
      ).catch((b) => [b])).then((b) => {
        if (b === void 0 || b.length === 0)
          return k === f && c(true), true;
        if (k === f) {
          const { comp: S, err: g } = b[0];
          if (g !== void 0 && console.error(g), c(false, S), v === true) {
            const w = b.find(({ comp: C }) => typeof C.focus == "function" && ft(C.$) === false);
            w !== void 0 && w.comp.focus();
          }
        }
        return false;
      });
    }
    function x() {
      f++, i.forEach((r) => {
        typeof r.resetValidation == "function" && r.resetValidation();
      });
    }
    function h2(r) {
      r !== void 0 && R(r);
      const v = f + 1;
      a().then((k) => {
        v === f && k === true && (e.onSubmit !== void 0 ? o("submit", r) : r !== void 0 && r.target !== void 0 && typeof r.target.submit == "function" && r.target.submit());
      });
    }
    function d(r) {
      r !== void 0 && R(r), o("reset"), nextTick(() => {
        x(), e.autofocus === true && e.noResetFocus !== true && p();
      });
    }
    function p() {
      Ct(() => {
        if (u.value === null)
          return;
        const r = u.value.querySelector("[autofocus][tabindex], [data-autofocus][tabindex]") || u.value.querySelector("[autofocus] [tabindex], [data-autofocus] [tabindex]") || u.value.querySelector("[autofocus], [data-autofocus]") || Array.prototype.find.call(u.value.querySelectorAll("[tabindex]"), (v) => v.tabIndex > -1);
        r != null && r.focus({ preventScroll: true });
      });
    }
    provide($t, {
      bindComponent(r) {
        i.push(r);
      },
      unbindComponent(r) {
        const v = i.indexOf(r);
        v > -1 && i.splice(v, 1);
      }
    });
    let s = false;
    return onDeactivated(() => {
      s = true;
    }), onActivated(() => {
      s === true && e.autofocus === true && p();
    }), onMounted(() => {
      e.autofocus === true && p();
    }), Object.assign(n.proxy, {
      validate: a,
      resetValidation: x,
      submit: h2,
      reset: d,
      focus: p,
      getValidationComponents: () => i
    }), () => h("form", {
      class: "q-form",
      ref: u,
      onSubmit: h2,
      onReset: d
    }, xe(t.default));
  }
});
var _t = {
  class: normalizeClass("row q-col-gutter-lg")
};
var Bt = defineComponent({
  __name: "AppForm",
  props: {
    wrapperComponent: { default: () => "div" },
    layoutSlots: { default: () => 1 },
    colGutter: { default: () => "sm" },
    modelValue: {},
    modelSchema: {},
    schema: {},
    actionButtonProps: { default: () => ({}) }
  },
  emits: ["submit", "update:modelValue", "reset"],
  setup(e, { emit: t }) {
    const o = e, n = ref(), { resetDefaultForm: u, validateForm: f, formData: i, fieldError: a } = Ke(
      o.modelValue
    );
    watch(i, (r) => t("update:modelValue", r), {
      deep: true
    });
    const x = (r) => (0, import_lodash2.default)(i.value, r), h2 = (r, v) => {
      (0, import_lodash.default)(
        i.value,
        v.scope,
        v != null && v.transform ? v == null ? void 0 : v.transform(r) : r
      ), a.value[v.scope] && f(o.modelSchema);
    }, d = () => {
      f(o.modelSchema), f(o.modelSchema) && t("submit", toRaw(i.value));
    }, p = () => {
      var r;
      u(), (r = n.value) == null || r.resetValidation(), t("reset");
    }, s = (r) => ({
      bind: {
        ...r.componentProps,
        modelValue: x(r.scope),
        error: !!a.value[r.scope],
        errorMessage: a.value[r.scope] || ""
      },
      on: {
        "update:modelValue": (v) => h2(v, r)
      }
    });
    return (r, v) => (openBlock(), createBlock(unref(Pt), {
      onSubmit: d,
      greedy: "",
      onReset: p,
      ref_key: "form",
      ref: n
    }, {
      default: withCtx(() => [
        (openBlock(), createBlock(resolveDynamicComponent(r.wrapperComponent), null, {
          default: withCtx(() => [
            createBaseVNode("div", _t, [
              (openBlock(true), createElementBlock(Fragment, null, renderList(r.layoutSlots, (k) => (openBlock(), createElementBlock("div", {
                class: "col",
                key: k
              }, [
                createBaseVNode("div", {
                  class: normalizeClass(`row q-col-gutter-${r.colGutter}`)
                }, [
                  (openBlock(true), createElementBlock(Fragment, null, renderList(r.schema.filter((c) => {
                    const q = c.layoutSlot || 1;
                    return q > r.layoutSlots ? k === 1 : q === k;
                  }), (c) => (openBlock(), createElementBlock("div", {
                    key: c.scope,
                    class: normalizeClass(`col-${c.cols || "auto"}`)
                  }, [
                    renderSlot(r.$slots, c.scope, {
                      props: {
                        setterScope: h2,
                        getterScope: x,
                        scope: c.scope,
                        ...s(c)
                      }
                    }, () => [
                      (openBlock(), createBlock(resolveDynamicComponent(c.component), mergeProps(s(c).bind, toHandlers(s(c).on)), null, 16))
                    ])
                  ], 2))), 128))
                ], 2)
              ]))), 128))
            ])
          ]),
          _: 3
        })),
        renderSlot(r.$slots, "actions", {
          props: { bind: { ...r.actionButtonProps } }
        }, () => [
          createVNode(pe, mergeProps(r.actionButtonProps, { type: "reset" }), {
            default: withCtx(() => [
              createTextVNode("Töm")
            ]),
            _: 1
          }, 16),
          createVNode(pe, mergeProps(r.actionButtonProps, {
            type: "submit",
            color: "primary"
          }), {
            default: withCtx(() => [
              createTextVNode("Spara")
            ]),
            _: 1
          }, 16)
        ])
      ]),
      _: 3
    }, 512));
  }
});
var Ot = Bt;
export {
  Ot as AppForm,
  Ke as useForm
};
//# sourceMappingURL=vue-app-form.js.map
